// <auto-generated />
using System;
using EventosApp.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventosApp.Infrastructure.Migrations
{
    [DbContext(typeof(EventosDbContext))]
    partial class EventosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EventosApp.Domain.Eventos.Calendario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Calendario", (string)null);
                });

            modelBuilder.Entity("EventosApp.Domain.Eventos.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Notas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Recurrente")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Evento", (string)null);
                });

            modelBuilder.Entity("EventosApp.Domain.Eventos.EventoCalendario", b =>
                {
                    b.Property<Guid>("EventoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CalendarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("EventoId", "CalendarioId");

                    b.HasIndex("CalendarioId");

                    b.ToTable("EventoCalendario", (string)null);
                });

            modelBuilder.Entity("EventosApp.Domain.Eventos.Invitacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("EventoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Invitacion", (string)null);
                });

            modelBuilder.Entity("EventosApp.Domain.Eventos.Recordatorio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EventoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("FechaFinRecordatorio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicioRecordatorio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Metodo")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodoTiempo")
                        .HasColumnType("int");

                    b.Property<bool>("RecordatorioRecurrente")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Repeticiones")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Recordatorio", (string)null);
                });

            modelBuilder.Entity("EventosApp.Domain.Eventos.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("EventosApp.Domain.Eventos.Calendario", b =>
                {
                    b.HasOne("EventosApp.Domain.Eventos.Usuario", "Usuario")
                        .WithMany("Calendarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EventosApp.Domain.Eventos.Evento", b =>
                {
                    b.HasOne("EventosApp.Domain.Eventos.Usuario", "Usuario")
                        .WithMany("Eventos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EventosApp.Domain.Eventos.EventoCalendario", b =>
                {
                    b.HasOne("EventosApp.Domain.Eventos.Calendario", "Calendario")
                        .WithMany("EventosCalendario")
                        .HasForeignKey("CalendarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventosApp.Domain.Eventos.Evento", "Evento")
                        .WithMany("EventosCalendario")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calendario");

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("EventosApp.Domain.Eventos.Invitacion", b =>
                {
                    b.HasOne("EventosApp.Domain.Eventos.Evento", "Evento")
                        .WithMany("Invitaciones")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventosApp.Domain.Eventos.Usuario", "Usuario")
                        .WithMany("Invitaciones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EventosApp.Domain.Eventos.Recordatorio", b =>
                {
                    b.HasOne("EventosApp.Domain.Eventos.Evento", "Evento")
                        .WithMany("Recordatorios")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventosApp.Domain.Eventos.Usuario", "Usuario")
                        .WithMany("Recordatorios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EventosApp.Domain.Eventos.Calendario", b =>
                {
                    b.Navigation("EventosCalendario");
                });

            modelBuilder.Entity("EventosApp.Domain.Eventos.Evento", b =>
                {
                    b.Navigation("EventosCalendario");

                    b.Navigation("Invitaciones");

                    b.Navigation("Recordatorios");
                });

            modelBuilder.Entity("EventosApp.Domain.Eventos.Usuario", b =>
                {
                    b.Navigation("Calendarios");

                    b.Navigation("Eventos");

                    b.Navigation("Invitaciones");

                    b.Navigation("Recordatorios");
                });
#pragma warning restore 612, 618
        }
    }
}
